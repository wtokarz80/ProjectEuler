package problem_2;

import java.util.ArrayList;
import java.util.List;

public class EvenFibNumbers {

    public static void main(String[] args) {
        EvenFibNumbers evenFibNumbers = new EvenFibNumbers();
        System.out.println(evenFibNumbers.findSumOfEvenFibNumbers(4000000));

    }



//    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


    public int findSumOfEvenFibNumbers(int limit){
        List<Integer> fibonacci = new ArrayList<>();
        int first = 1;
        int second = 2;
        fibonacci.add(second);
        int fib = 0;
        while(fib < limit){
            fib = first + second;
            if(fib % 2 == 0){
                fibonacci.add(fib);
            }
            first = second;
            second = fib;
        }
        return fibonacci.stream().mapToInt(Integer::intValue).sum();
    }


}
